#include <stdio.h>
#include <stdlib.h>
/*binary search'de teker teker aramaktansa orta eleman a gore kiyaslama yaparak arama yapariz
eger aranan eleman orta elemana esitse direkt geri donut aliriz,egeer degilse aranan eleman ortadaki elemana gore buyuk
mu yoksa kucuk mu ona bakar.eÄŸer aranan eleman ortadaki elemandan buyukse ortadaki elemanin solundaki sayilar silinir ve yeni 
orta eleman kalan sayilarin ortasindan secilir.ve bu islem aranan sayiyi bulana kadar devam eder.eger bulunamazsa sayinin bulunamadigini soyler*/
int main()
{
	int ilk,son,orta,aranan;
	int i,j;
	int gecici;
	int N;
	printf("Kac adet sayi uretilecek\n");
	scanf("%d",&N);
	
	int dizi[N];
	printf("Dizi elemanlari\n");
	for(i=0;i<N;i++)
	{
		scanf("%d",&dizi[i]);
	}
	printf("Dizi elemanlarim:\n");
	for(i=0;i<N;i++)
	{
		printf("%d\n",dizi[i]);
	}
	for(i=0;i<(N-1);i++)
	{
		for(j=0;j<N-1-i;j++)
		{
			if(dizi[j]>dizi[j+1])
			{
				gecici=dizi[j];
				dizi[j]=dizi[j+1];
				dizi[j+1]=gecici;
			}
		}
	}
	printf("\nSiralanmis hali");
	for(i=0;i<N;i++)
	{
		printf("%d\t",dizi[i]);
	}
	printf("Aranan degeri giriniz\n");
	scanf("%d ",&aranan);
	
	ilk=0;
	son=N-1;
	orta=(ilk+son)/2;
	
	while(ilk<=son)
	{
		if(dizi[orta]<aranan)
		{
			ilk=orta+1;
		}
		else if(dizi[orta]==aranan)
		{
			printf("%d sayisi %d. sirada bulundu\n",aranan,orta+1);
		}
		else
		{
			son=orta-1;
		}
		orta=(ilk+son)/2;
	}
	if(ilk>son)
	{
		printf("%d bulunamadi",aranan);
	}
	

	return 0;
}
